Dplyr verbs
√ head (step-call.R)
√ tail (step-call.R)
√ dim (step.R)
• h2o_id (new)
√ tbl_vars (step.R)
√ groups (step.R)
√ group_size (step.R)
√ n_groups (step.R)
√ collect (step.R)
√ compute (step.R)
√ as.data.frame (step.R)
√ as.data.table (step.R)
√ as_tibble (step.R)
√ pull (step.R)
√ print (step.R)
√ show_query (step.R)
√ select (step-subset.R)
√ filter (step-subset.R)
√ mutate (step-mutate.R)
√ arrange (step-subset.R)
√ transmute (step-subset.R)
√ group_by (step-group.R)
  √ group_by %>% summarize()
  √ group_by %>% filter()
  √ group_by %>% mutate()
  √ group_by %>% transmute()
√ ungroup (step-group.R)
• group_map (step-modify.R)
• group_modify (step-modify.R)
• group_walk (step-modify.R)
√ summarize (step-subset.R)
• distinct (step-call.R)
• unique (step-call.R)
• do (step-subset.R)
√ rename (step-call.R)
√ sample_frac (step-subset.R)
√ sample_n (step-subset.R)
√ slice (step-subset.R)
√ slice(5:n())
x slice_head
x slice_tail
x slice_min
x slice_max
x slice_sample
√ left_join (step-join.R)
√ right_join (step-join.R)
√ inner_join (step-join.R)
√ full_join (step-join.R)
• semi_join (step-join.R) -- depends on unique
• anti_join (step-join.R) -- depends on implementing on parameter for data.table; passing a negative table, which probably cannnot happen
• intersect (step-set.R)
• union (step-set.R)
• union_all (step-set.R)
• setdiff (step-set.R)


• Fix eager.R
